update map
    Atomic unit is a structure such as a building, a shop
    heightmap generation through diamond square algorithm or perlin noise
    send items or materials by mail?
    slope between two adjacent points determines the added cost for travelling
    height of a point has influence on weather
    distance to nearest water source has influence on weather (humidity, heat, ...) => basic survival items
    
    simulate weather and other processes for biomes
    simulate rainfall for ocean and lake generation
        possible methods:
        have clouds pass over the terrain from a random direction which are loaded with a predetermined amount of water
        when traveling across the terrain they lose water and raise the waterlevel of the pixel they're above
        when having to raise their height they lose more water than normal
        can also be deduced from this
    distribute underground materials for later use in market simulation
        perlin noise?
    save map data to chunks to avoid having all data loaded concurrently?
    save image representation of map to given directory for use in website
configuration file
    load basic configuration from a dawn.conf file
    XML/JSON? own syntax?
    possible configuration options:
        IP
        Port
        Nickname
        channel
update item and drop system
concatenate similar messages
    this may require a complete redesign of the message system to be done efficiently
    could also make use of a registration system allowing for templating and extension of messages
fluctuating marketplace
spell system (with spell levels)
special monster modifiers
player alignment
player classes
player titles (killbased)
global bounty (based on special monster)
hourly bounties (kill x amount of monster)
PVP
gear alignment
enchanting of equipment (temporary effect, usable item)
traversable dungeon
bank (with gained interest)
buildable properties (to be discussed)
mount system (increased movement speed)
command-line arguments to set some attributes for added convenience
